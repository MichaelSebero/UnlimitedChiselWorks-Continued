buildscript {
    repositories {
        jcenter()
        maven { url = "https://maven.minecraftforge.net/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "gradle.plugin.net.minecrell:licenser:0.3"
    }
}

import groovy.json.JsonOutput
import groovy.json.JsonSlurper

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'net.minecrell.licenser'

version = "0.3.5"
group = "pl.asie.ucw"
archivesBaseName = "UnlimitedChiselWorks"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
}

if (System.getenv("BUILD_NUMBER") != null)
    version += ".${System.getenv("BUILD_NUMBER")}"

apply plugin: 'idea'
idea {
    module {
        outputDir = file('build/classes/java/main')
    }
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    
    mappings = "stable_39"

    replace "\${version}", project.version
    replace "\${mcversion}", version
}

repositories {
    maven {
        url "http://maven.tterrag.com/"
    }
    maven {
        url "https://maven.cil.li/"
    }
    ivy {
        name 'asie dependency mirror'
        artifactPattern "http://asie.pl/javadeps/[module]-[revision](-[classifier]).[ext]"
    }
}

// Fix sourceSets configuration for older Gradle
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources', 'docs']
        }
    }
}

// Add configurations to handle duplicates
configurations {
    all*.exclude group: 'pl.asie.ucw', module: 'UnlimitedChiselWorks'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    manifest {
        attributes(
            'Specification-Title': archivesBaseName,
            'Specification-Version': version,
            'Implementation-Title': archivesBaseName,
            'Implementation-Version': version,
            'Built-By': System.getProperty('user.name'),
            'Created-By': "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
            'ForceLoadAsMod': true
        )
    }
}

license {
    sourceSets = [project.sourceSets.main]
    header = project.file("docs/licenses/LICENSE")
    ignoreFailures = true
    exclude '**/*.lang'
    exclude '**/*.info'
    exclude '**/*.mcmeta'
}

dependencies {
    deobfCompile "team.chisel:Chisel:MC1.12.2-1.0.2.45"
    deobfCompile "team.chisel.ctm:CTM:MC1.12.2-1.0.2.31"
    compileOnly "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2:api"
    runtimeOnly "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    doLast {
        fileTree(dir: outputs.files.asPath, include: "**/*.json").each {
            File file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
        }
    }
}

if (file('private.gradle').exists()) {
    apply from: 'private.gradle'
}
